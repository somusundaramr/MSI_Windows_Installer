---
# tasks file for winmsi project

- name: Check MSI file exist in network share
  stat:
    path: "{{ MSI_File_Location }}"
  run_once: yes
  register: stat_file
  delegate_to: localhost

- name: Update in log and end play if MSI file not found or not accessible
  block:
    - name: Update in log file and end play if MSI file not found
      lineinfile:
        path: logs/winmsi_logfile
        line: "MSI file not found in specified location"
      delegate_to: localhost

    - meta: end_play
  when: stat_file.stat.exists == False

- name: Report template
  template:
    src: roles/winmsi/templates/report.j2
    dest: winmsi_report.txt
  run_once: yes
  delegate_to: localhost

- name: Check MSI already Installed
  win_reg_stat:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{{ Product_Code }}
  register: pre_installation

- name: Copy MSI file to remote host tmp location and install
  block:
    - name: Copy MSI file from network share to host
      win_copy:
        src: "{{ MSI_File_Location }}"
        dest: C:\temp\{{ MSI_File_name }}
      register: msicopy_status

    - name: Install MSI Package
      win_package:
        path: C:\temp\{{ MSI_File_name }}
        arguments: "{{ MSIEXEC_arguments }}"
        wait: yes
        state: present
      register: installation_status
      when: msicopy_status.failed == false
  when: stat_file.stat.exists == True and ansible_powershell_version >= 3 and pre_installation.exists == False
  become: yes
  become_user: ansible
  become_method: runas

- name: Check MSI installed properly
  win_reg_stat:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{{ Product_Code }}
  register: post_installation

- name: Updates as Exists if already installated
  set_fact:
    installation: "Exists"
    restart_required: "-NA-"
    Exist: "{{ Exist | int + 1 }}"
  when: pre_installation.exists == true

- name: Updates status of installation when installing through current play
  set_fact:
    installation: "Installed"
    restart_required: "{{ installation_status.reboot_required }}"
    Installed: "{{ Installed | int + 1 }}"
  when: pre_installation.exists == false and installation_status.changed == true

- name: Updates Failed status if failed in current play
  set_fact:
    installation: "Failed"
    restart_required: "-NA-"
    Failed: "{{ Failed | int + 1 }}"
  when: pre_installation.exists == false and installation_status.changed == false

- name: Updating Instalation status in report
  lineinfile:
    path: winmsi_report.txt
    regex: "^({{ ansible_hostname }}.*)$"
    line: '\1,      {{ installation }}          {{ restart_required }}'
    backrefs: yes
  delegate_to: localhost

- name: Updating Installation Statistics in report
  lineinfile:
    path: winmsi_report.txt
    regex: "^Installed"
    line: "Installed  : {{ Installed }}      Exist : {{ Exist }}     Failed : {{ Failed }}"
  delegate_to: localhost

...
